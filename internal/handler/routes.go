// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	"imd-seat-be/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/checkin",
				Handler: checkInHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/feedback",
				Handler: submitFeedbackHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/reservation/rooms",
				Handler: getRoomsHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/mine/reservations",
				Handler: getMyReservationHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/mine/violations",
				Handler: getViolationHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodDelete,
				Path:    "/reservation/cancel/:id",
				Handler: cancelReservationHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/reservation/days",
				Handler: getAvailableDaysHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/reservation/reserve",
				Handler: reserveSeatHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/reservation/seats",
				Handler: getSeatInfoHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: loginHandler(serverCtx),
			},
		},
	)
}
